{"version":3,"sources":["components/BingoHead.tsx","components/BingoSpot.tsx","components/BingoCard.tsx","util/arrayShuffle.ts","components/Ball.tsx","util/generateCardNumbers.ts","util/transpose.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BingoHead","className","split","map","t","i","BingoSpot","number","open","setOpen","Number","onClick","React","memo","BingoCard","numbers","_","arrayShuffle","array","length","j","Math","floor","random","targets","Array","from","Ball","c","stop","useState","setRandom","count","setCount","requestRef","useRef","useEffect","animate","pre","current","requestAnimationFrame","cancelAnimationFrame","generateCardNumbers","a","serialNumbers","serialNumbersSplit","shuffle","slice","b","flat","v","App","setNumbers","setStop","useCallback","n","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.051c27b1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst title = \"BINGO\";\nconst BingoHead: React.FC = () => {\n\treturn (\n\t\t<div className=\"flex justify-between px-4\">\n\t\t\t{title.split(\"\").map((t, i) => (\n\t\t\t\t<span\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={`w-12 ${i > 0 && \"ml-3\"} font-bold text-center`}\n\t\t\t\t>\n\t\t\t\t\t{t}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default BingoHead;\n","import React from \"react\";\n\ntype Props = {\n\ti: Number;\n\tnumber: Number;\n\topen: boolean;\n\tsetOpen: (n: Number) => void;\n};\nconst BingoSpot: React.FC<Props> = ({ i, number, open, setOpen }) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`w-12 h-12 mt-3 bg-white cursor-pointer group ${\n\t\t\t\tNumber(i) % 5 !== 0 && \"ml-3\"\n\t\t\t}`}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"flex items-center justify-center w-full h-full perspective-500\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetOpen(i);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span className=\"inline-block bg-gray-300 rounded-t-xl\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={`flex items-center justify-center w-8 h-8 bg-white rounded-t-xl transform-gpu translate-y-px origin-bottom transition-all ease-out duration-150 ${\n\t\t\t\t\t\t\topen ? \"rotate-x-60\" : \"group-hover:opacity-50\"\n\t\t\t\t\t\t} ${number === 0 && \"text-sm\"}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{number === 0 ? \"Free\" : number}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(BingoSpot);\n","import React from \"react\";\nimport BingoHead from \"./BingoHead\";\nimport BingoSpot from \"./BingoSpot\";\n\ntype Props = {\n\tnumbers: {\n\t\tnumber: Number;\n\t\topen: boolean;\n\t}[];\n\tsetOpen: (n: Number) => void;\n};\nconst BingoCard: React.FC<Props> = ({ numbers, setOpen }) => {\n\treturn (\n\t\t<div className=\"mt-4 py-4 bg-green-300 rounded\">\n\t\t\t<BingoHead />\n\t\t\t<div className=\"flex flex-wrap px-4\">\n\t\t\t\t{numbers.map((_, i) => (\n\t\t\t\t\t<BingoSpot\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tnumber={_.number}\n\t\t\t\t\t\topen={_.open}\n\t\t\t\t\t\ti={i}\n\t\t\t\t\t\tsetOpen={setOpen}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BingoCard;\n","export const arrayShuffle = ([...array]: number[]) => {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { arrayShuffle } from \"../util/arrayShuffle\";\n\nconst targets = arrayShuffle(Array.from({ length: 75 }, (_, i) => ++i));\nconst n = (c: number) => {\n\tswitch (c) {\n\t\tcase 0:\n\t\t\treturn \"??\";\n\t\tdefault:\n\t\t\treturn targets[c - 1];\n\t}\n};\n\ntype Props = {\n\tstop: boolean;\n};\nconst Ball: React.FC<Props> = ({ stop }) => {\n\tconst [random, setRandom] = useState(0);\n\tconst [count, setCount] = useState(0);\n\tconst requestRef = useRef<number>(0);\n\tuseEffect(() => {\n\t\tconst animate = () => {\n\t\t\tsetRandom(pre => (pre > 75 ? 0 : ++pre));\n\t\t\tif (!stop) {\n\t\t\t\trequestRef.current = requestAnimationFrame(animate);\n\t\t\t}\n\t\t};\n\t\tanimate();\n\n\t\tif (!stop) {\n\t\t\tsetCount(c => ++c);\n\t\t}\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(requestRef.current);\n\t\t};\n\t}, [stop]);\n\n\treturn (\n\t\t<span className=\"text-9xl font-bold\">\n\t\t\t{count > targets.length ? \"End\" : stop ? n(count) : random}\n\t\t</span>\n\t);\n};\n\nexport default Ball;\n","import { arrayShuffle as shuffle } from \"./arrayShuffle\";\nimport { transpose } from \"./transpose\";\n\nexport const generateCardNumbers = () => {\n\tconst serialNumbers = Array.from({ length: 75 }, (_, i) => i + 1);\n\tconst serialNumbersSplit: number[][] = [\n\t\tshuffle(serialNumbers.slice(0, 15)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(15, 30)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(30, 45)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(45, 60)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(60, 75)).slice(0, 5),\n\t];\n\tconst cardNumbers = transpose(serialNumbersSplit)\n\t\t.flat()\n\t\t.map((v, i) =>\n\t\t\ti === 12 ? { number: 0, open: false } : { number: v, open: false }\n\t\t);\n\treturn cardNumbers;\n};\n","export const transpose = (a: number[][]) => {\n\treturn a[0].map((_, b) => a.map(c => c[b]));\n};\n","import React, { useState, useCallback } from \"react\";\nimport BingoCard from \"./components/BingoCard\";\nimport Ball from \"./components/Ball\";\nimport { generateCardNumbers } from \"./util/generateCardNumbers\";\n\nconst App: React.FC = () => {\n\tconst [numbers, setNumbers] = useState(generateCardNumbers());\n\tconst [stop, setStop] = useState(true);\n\n\tconst UpdateCard = () => {\n\t\tsetNumbers(generateCardNumbers());\n\t};\n\tconst setOpen = useCallback((n: Number) => {\n\t\tsetNumbers(pre => {\n\t\t\tconst cur = [...pre];\n\t\t\treturn cur.map((v, i) => (i === n ? { ...v, open: true } : v));\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"w-full min-h-full p-5 bg-blue-200\">\n\t\t\t<h1 className=\"text-xl font-bold text-center\">Bingo Card Generator</h1>\n\t\t\t<div className=\"md:flex mt-10 mx-auto container\">\n\t\t\t\t<div className=\"flex flex-col justify-between md:w-1/2\">\n\t\t\t\t\t<h2 className=\"text-xl font-bold text-center\">Number</h2>\n\t\t\t\t\t<div className=\"flex justify-center items-center w-80 h-80 mt-4 mx-auto bg-gray-200 rounded-full\">\n\t\t\t\t\t\t<Ball stop={stop} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center mt-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"p-2 bg-blue-500 rounded text-white\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetStop(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSTART\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"ml-4 p-2 bg-blue-500 rounded text-white\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetStop(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSTOP\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mt-10 md:w-1/2 md:mt-0\">\n\t\t\t\t\t<h2 className=\"text-xl font-bold text-center\">Bingo Card</h2>\n\t\t\t\t\t<div className=\"mx-auto w-80 container\">\n\t\t\t\t\t\t<BingoCard numbers={numbers} setOpen={setOpen} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center mt-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"p-2 bg-blue-500 rounded text-white\"\n\t\t\t\t\t\t\tonClick={UpdateCard}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tカードを更新する\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}