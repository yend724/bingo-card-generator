{"version":3,"sources":["components/BingoHead.tsx","components/BingoSpot.tsx","components/BingoCard.tsx","hooks/useRequestAnimationFrame.ts","components/Ball.tsx","components/Container.tsx","util/arrayShuffle.ts","util/generateCardNumbers.ts","util/transpose.ts","hooks/useCard.ts","hooks/useToggle.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BingoHead","className","split","map","t","i","BingoSpot","number","isOpen","open","Number","onClick","React","memo","BingoCard","numbers","_","useRequestAnimationFrame","isLooop","useState","count","setCount","loopRef","useRef","requestRef","animate","useCallback","current","requestAnimationFrame","pre","useEffect","cancelAnimationFrame","Ball","isShffling","frameCount","numbersLength","useMemo","length","Container","children","title","arrayShuffle","array","j","Math","floor","random","generateCardNumbers","a","serialNumbers","Array","from","serialNumbersSplit","shuffle","slice","b","c","flat","v","useCard","setNumbers","getNewNumbers","n","useToggle","bool","toggle","setToggle","randomNumbers","App","setSuffule","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.779aa4f6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst title = \"BINGO\";\nconst BingoHead: React.FC = () => {\n\treturn (\n\t\t<div className=\"flex justify-between px-4\">\n\t\t\t{title.split(\"\").map((t, i) => (\n\t\t\t\t<span\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={`w-12 ${i > 0 && \"ml-3\"} font-bold text-center`}\n\t\t\t\t>\n\t\t\t\t\t{t}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default BingoHead;\n","import React from \"react\";\n\ntype Props = {\n\ti: Number;\n\tnumber: Number;\n\tisOpen: boolean;\n\topen: (n: Number) => void;\n};\nconst BingoSpot: React.FC<Props> = ({ i, number, isOpen, open }) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`w-12 h-12 mt-3 bg-white cursor-pointer group ${\n\t\t\t\tNumber(i) % 5 !== 0 && \"ml-3\"\n\t\t\t}`}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"flex items-center justify-center w-full h-full perspective-500\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\topen(i);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span className=\"inline-block bg-gray-300 rounded-t-xl\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={`flex items-center justify-center w-8 h-8 bg-white rounded-t-xl transform-gpu translate-y-px origin-bottom transition-all ease-out duration-150 ${\n\t\t\t\t\t\t\tisOpen ? \"rotate-x-60\" : \"group-hover:opacity-50\"\n\t\t\t\t\t\t} ${number === 0 && \"text-sm\"}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{number === 0 ? \"Free\" : number}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(BingoSpot);\n","import React from \"react\";\nimport BingoHead from \"./BingoHead\";\nimport BingoSpot from \"./BingoSpot\";\n\ntype Props = {\n\tnumbers: {\n\t\tnumber: Number;\n\t\topen: boolean;\n\t}[];\n\topen: (n: Number) => void;\n};\nconst BingoCard: React.FC<Props> = ({ numbers, open }) => {\n\treturn (\n\t\t<div className=\"mt-4 py-4 bg-green-300 rounded\">\n\t\t\t<BingoHead />\n\t\t\t<div className=\"flex flex-wrap px-4\">\n\t\t\t\t{numbers.map((_, i) => (\n\t\t\t\t\t<BingoSpot\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tnumber={_.number}\n\t\t\t\t\t\tisOpen={_.open}\n\t\t\t\t\t\ti={i}\n\t\t\t\t\t\topen={open}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BingoCard;\n","import { useState, useEffect, useRef, useCallback } from \"react\";\n\nconst useRequestAnimationFrame = (isLooop: boolean) => {\n\tconst [count, setCount] = useState(0);\n\tconst loopRef = useRef(false);\n\tconst requestRef = useRef<number>(0);\n\tconst animate = useCallback(() => {\n\t\tif (loopRef.current) {\n\t\t\trequestRef.current = requestAnimationFrame(animate);\n\t\t}\n\t\tsetCount(pre => ++pre);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tloopRef.current = isLooop;\n\t\tanimate();\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(requestRef.current);\n\t\t};\n\t\t//eslint-disable-next-line\n\t}, [isLooop]);\n\n\treturn { count };\n};\n\nexport default useRequestAnimationFrame;\n","import React, { useMemo } from \"react\";\nimport useRequestAnimationFrame from \"../hooks/useRequestAnimationFrame\";\n\ntype Props = {\n\tisShffling: boolean;\n\tnumbers: number[];\n\tcount: number;\n};\nconst Ball: React.FC<Props> = ({ isShffling, numbers, count }) => {\n\tconst { count: frameCount } = useRequestAnimationFrame(isShffling);\n\tconst numbersLength = useMemo(() => {\n\t\treturn numbers.length;\n\t\t//eslint-disable-next-line\n\t}, []);\n\tif (count === 0) {\n\t\treturn <span className=\"text-9xl font-bold\">??</span>;\n\t}\n\tif (count > numbersLength) {\n\t\treturn <span className=\"text-5xl font-bold\">Completed</span>;\n\t}\n\treturn (\n\t\t<span className=\"text-9xl font-bold\">\n\t\t\t{isShffling ? numbers[frameCount % numbersLength] : numbers[count - 1]}\n\t\t</span>\n\t);\n};\n\nexport default React.memo(Ball);\n","import React from \"react\";\n\ntype Props = {\n\ttitle: string;\n\tchildren: React.ReactNode;\n};\nconst Container: React.FC<Props> = ({ children, title }) => {\n\treturn (\n\t\t<div className=\"flex flex-col justify-between mt-6 md:mt-0 md:w-1/2\">\n\t\t\t<h2 className=\"text-xl font-bold text-center\">{title}</h2>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Container;\n","export const arrayShuffle = ([...array]: number[]) => {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n};\n","import { arrayShuffle as shuffle } from \"./arrayShuffle\";\nimport { transpose } from \"./transpose\";\n\nexport const generateCardNumbers = () => {\n\tconst serialNumbers = Array.from({ length: 75 }, (_, i) => i + 1);\n\tconst serialNumbersSplit: number[][] = [\n\t\tshuffle(serialNumbers.slice(0, 15)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(15, 30)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(30, 45)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(45, 60)).slice(0, 5),\n\t\tshuffle(serialNumbers.slice(60, 75)).slice(0, 5),\n\t];\n\tconst cardNumbers = transpose(serialNumbersSplit)\n\t\t.flat()\n\t\t.map((v, i) =>\n\t\t\ti === 12 ? { number: 0, open: false } : { number: v, open: false }\n\t\t);\n\treturn cardNumbers;\n};\n","export const transpose = (a: number[][]) => {\n\treturn a[0].map((_, b) => a.map(c => c[b]));\n};\n","import { useState, useCallback } from \"react\";\nimport { generateCardNumbers } from \"../util/generateCardNumbers\";\n\nconst useCard = () => {\n\tconst [numbers, setNumbers] = useState(generateCardNumbers());\n\n\tconst getNewNumbers = useCallback(() => {\n\t\tsetNumbers(generateCardNumbers());\n\t}, []);\n\tconst open = useCallback((n: Number) => {\n\t\tsetNumbers(pre => {\n\t\t\tconst cur = [...pre];\n\t\t\treturn cur.map((v, i) => (i === n ? { ...v, open: true } : v));\n\t\t});\n\t}, []);\n\n\treturn { numbers, getNewNumbers, open };\n};\n\nexport default useCard;\n","import { useState } from \"react\";\n\nconst useToggle = (bool: boolean = false) => {\n\tconst [toggle, setToggle] = useState(bool);\n\treturn { toggle, setToggle };\n};\n\nexport default useToggle;\n","import React, { useState } from \"react\";\nimport BingoCard from \"./components/BingoCard\";\nimport Ball from \"./components/Ball\";\nimport Container from \"./components/Container\";\nimport useCard from \"./hooks/useCard\";\nimport useToggle from \"./hooks/useToggle\";\nimport { arrayShuffle } from \"./util/arrayShuffle\";\n\nconst randomNumbers = arrayShuffle(Array.from({ length: 75 }, (_, i) => ++i));\n\nconst App: React.FC = () => {\n\tconst { toggle: isShffling, setToggle: setSuffule } = useToggle(false);\n\tconst { numbers, getNewNumbers, open } = useCard();\n\tconst [count, setCount] = useState(0);\n\n\treturn (\n\t\t<div className=\"w-full min-h-full p-5 bg-blue-200\">\n\t\t\t<h1 className=\"text-xl font-bold text-center\">Bingo Card Generator</h1>\n\t\t\t<div className=\"md:flex mt-10 mx-auto container\">\n\t\t\t\t<Container title=\"Number\">\n\t\t\t\t\t<div className=\"flex justify-center items-center w-80 h-80 mt-4 mx-auto bg-gray-200 rounded-full\">\n\t\t\t\t\t\t<Ball\n\t\t\t\t\t\t\tnumbers={randomNumbers}\n\t\t\t\t\t\t\tisShffling={isShffling}\n\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center mt-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={`p-2 bg-blue-500 rounded text-white`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetSuffule(true);\n\t\t\t\t\t\t\t\tsetCount(pre => ++pre);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSTART\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={`ml-4 p-2 bg-blue-500 rounded text-white`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetSuffule(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSTOP\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t\t\t<Container title=\"Bingo Card\">\n\t\t\t\t\t<div className=\"mx-auto w-80 container\">\n\t\t\t\t\t\t<BingoCard numbers={numbers} open={open} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center mt-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"p-2 bg-blue-500 rounded text-white\"\n\t\t\t\t\t\t\tonClick={getNewNumbers}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tカードを更新する\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}