{"version":3,"sources":["components/BingoHead.tsx","components/BingoSpot.tsx","util/arrayShuffle.ts","util/generateCardNumbers.ts","components/BingoCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BingoHead","className","split","map","t","i","BingoSpot","number","useState","open","setOpen","Number","onClick","arrayShuffle","array","length","j","Math","floor","random","generateCardNumbers","all","Array","from","_","arr","shuffle","slice","ret","push","BingoCard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAkBeA,EAfa,WAC3B,OACC,qBAAKC,UAAU,4BAAf,SAHY,QAIJC,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACpB,sBAECJ,UAAS,eAAUI,EAAI,GAAK,OAAnB,0BAFV,SAIED,GAHIC,S,OC0BKC,EA5BoB,SAAC,GAAmB,IAAjBD,EAAgB,EAAhBA,EAAGE,EAAa,EAAbA,OACxC,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACC,qBACCT,UAAS,uDACRU,OAAON,GAAK,IAAM,GAAK,QAExBO,QATkB,WACnBF,GAAQ,IAIR,SAMC,qBAAKT,UAAU,iEAAf,SACC,sBAAMA,UAAU,wCAAhB,SACC,sBACCA,UAAS,oHACRQ,EAAO,cAAgB,yBADf,YAEM,IAAXF,GAAgB,WAHrB,SAKa,IAAXA,EAAe,OAASA,W,OC1BlBM,EAAe,SAAC,GAC5B,IADsD,IAAtBC,EAAqB,wBAC5CT,EAAIS,EAAMC,OAAS,EAAGV,GAAK,EAAGA,IAAK,CAC3C,IAAMW,EAAIC,KAAKC,MAAMD,KAAKE,UAAYd,EAAI,IADC,EAEpB,CAACS,EAAME,GAAIF,EAAMT,IAAvCS,EAAMT,GAFoC,KAEhCS,EAAME,GAF0B,KAI5C,OAAOF,GCHKM,EAAsB,WAWlC,IAVA,IAAMC,EAAMC,MAAMC,KAAK,CAAER,OAAQ,KAAM,SAACS,EAAGnB,GAAJ,OAAUA,EAAI,KAC/CoB,EAAkB,CACvBC,EAAQL,EAAIM,MAAM,EAAG,KACrBD,EAAQL,EAAIM,MAAM,GAAI,KACtBD,EAAQL,EAAIM,MAAM,GAAI,KACtBD,EAAQL,EAAIM,MAAM,GAAI,KACtBD,EAAQL,EAAIM,MAAM,GAAI,MAEjBC,EAAgB,GAEbvB,EAAI,EAAGA,EAAI,EAAGA,IACtB,IAAK,IAAIW,EAAI,EAAGA,EAAI,EAAGA,IACZ,IAANX,GAAiB,IAANW,EACdY,EAAIC,KAAK,GAETD,EAAIC,KAAKJ,EAAIT,GAAGX,IAInB,OAAOuB,GCJOE,EAba,WAC3B,OACC,sBAAK7B,UAAU,iCAAf,UACC,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACEmB,IAAsBjB,KAAI,SAACqB,EAAGnB,GAAJ,OAC1B,cAAC,EAAD,CAAmBE,OAAQiB,EAAGnB,EAAGA,GAAjBA,YCGN0B,EAXO,WACrB,OACC,sBAAK9B,UAAU,oBAAf,UACC,oBAAIA,UAAU,gCAAd,kCACA,qBAAKA,UAAU,eAAf,SACC,cAAC,EAAD,UCMW+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b94b1c5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst title = \"BINGO\";\nconst BingoHead: React.FC = () => {\n\treturn (\n\t\t<div className=\"flex justify-between px-4\">\n\t\t\t{title.split(\"\").map((t, i) => (\n\t\t\t\t<span\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={`w-12 ${i > 0 && \"ml-3\"} font-bold text-center`}\n\t\t\t\t>\n\t\t\t\t\t{t}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default BingoHead;\n","import React, { useState } from \"react\";\n\ntype Props = {\n\ti: Number;\n\tnumber: Number;\n};\nconst BingoSpot: React.FC<Props> = ({ i, number }) => {\n\tconst [open, setOpen] = useState(false);\n\tconst onClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`w-12 h-12 mt-3 bg-white cursor-pointer group ${\n\t\t\t\tNumber(i) % 5 !== 0 && \"ml-3\"\n\t\t\t}`}\n\t\t\tonClick={onClickOpen}\n\t\t>\n\t\t\t<div className=\"flex items-center justify-center w-full h-full perspective-500\">\n\t\t\t\t<span className=\"inline-block bg-gray-300 rounded-t-xl\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={`flex items-center justify-center w-8 h-8 bg-white rounded-t-xl transform-gpu translate-y-px origin-bottom ${\n\t\t\t\t\t\t\topen ? \"rotate-x-60\" : \"group-hover:opacity-50\"\n\t\t\t\t\t\t} ${number === 0 && \"text-sm\"}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{number === 0 ? \"Free\" : number}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BingoSpot;\n","export const arrayShuffle = ([...array]: number[]) => {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n};\n","import { arrayShuffle as shuffle } from \"./arrayShuffle\";\n\nexport const generateCardNumbers = () => {\n\tconst all = Array.from({ length: 75 }, (_, i) => i + 1);\n\tconst arr: number[][] = [\n\t\tshuffle(all.slice(0, 15)),\n\t\tshuffle(all.slice(15, 30)),\n\t\tshuffle(all.slice(30, 45)),\n\t\tshuffle(all.slice(45, 60)),\n\t\tshuffle(all.slice(60, 75)),\n\t];\n\tconst ret: number[] = [];\n\n\tfor (let i = 0; i < 5; i++) {\n\t\tfor (let j = 0; j < 5; j++) {\n\t\t\tif (i === 2 && j === 2) {\n\t\t\t\tret.push(0);\n\t\t\t} else {\n\t\t\t\tret.push(arr[j][i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n};\n","import React from \"react\";\nimport BingoHead from \"./BingoHead\";\nimport BingoSpot from \"./BingoSpot\";\nimport { generateCardNumbers } from \"../util/generateCardNumbers\";\n\nconst BingoCard: React.FC = () => {\n\treturn (\n\t\t<div className=\"mt-4 py-4 bg-green-300 rounded\">\n\t\t\t<BingoHead />\n\t\t\t<div className=\"flex flex-wrap px-4\">\n\t\t\t\t{generateCardNumbers().map((_, i) => (\n\t\t\t\t\t<BingoSpot key={i} number={_} i={i} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BingoCard;\n","import React from \"react\";\nimport BingoCard from \"./components/BingoCard\";\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className=\"w-full h-full p-5\">\n\t\t\t<h1 className=\"text-xl font-bold text-center\">Bingo Card Generator</h1>\n\t\t\t<div className=\"mx-auto w-80\">\n\t\t\t\t<BingoCard />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}